@model Mango.Web.Areas.Admin.Models.ProductFormViewModel

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "product-form" }))
{
    @Html.AntiForgeryToken()

    @Html.EditorFor(model => model.ProductId)
    @Html.EditorFor(model => model.ProductImagesString)
    @Html.EditorFor(model => model.UrlSlugCompare)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCategoryId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductCategoryId, Model.ProductCategories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductCategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlSlug, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeaturedHomepage, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FeaturedHomepage)
                    @Html.ValidationMessageFor(model => model.FeaturedHomepage, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <hr/>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImages, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a id="btnUploadProductImage" class="btn btn-info">Upload</a>
                <hr />
                <div class="sortable-images">
                    @Html.EditorFor(model => Model.ProductImages)
                </div>
                <hr />
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-default btn-primary" id="product-save">
                    <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> Save
                </button>
            </div>
        </div>
    </div>
}

<script>
    var @Model.UploadProductImageViewModel.OptionsVarName = {
        modalId: "#@Model.UploadProductImageViewModel.ModalId",
        modalTrigger: "#btnUploadProductImage"
    };
</script>
@Html.EditorFor(model => model.UploadProductImageViewModel)